--- ldap_user/src/EventSubscriber/LdapEntryProvisionSubscriber.php
+++ ldap_user/src/EventSubscriber/LdapEntryProvisionSubscriber.php
@@ -14,6 +14,7 @@ use Drupal\Core\Config\ConfigFactory;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\Core\Extension\ModuleHandlerInterface;
 use Drupal\Core\File\FileSystemInterface;
+use Drupal\Core\Password\DefaultPasswordGenerator;
 use Drupal\ldap_servers\Helper\ConversionHelper;
 use Drupal\ldap_servers\Helper\CredentialsStorage;
 use Drupal\ldap_servers\LdapUserAttributesInterface;
@@ -139,6 +147,8 @@ class LdapEntryProvisionSubscriber implements EventSubscriberInterface, LdapUser
    *   Field Provider.
    * @param \Drupal\Core\File\FileSystemInterface $file_system
    *   File system.
+   * @param \Drupal\Core\Password\DefaultPasswordGenerator $passwordGenerator
+   *   Password Generator.
    */
   public function __construct(
     ConfigFactory $config_factory,
@@ -148,7 +158,8 @@ class LdapEntryProvisionSubscriber implements EventSubscriberInterface, LdapUser
     ModuleHandlerInterface $module_handler,
     LdapUserManager $ldap_user_manager,
     FieldProvider $field_provider,
-    FileSystemInterface $file_system) {
+    FileSystemInterface $file_system,
+    DefaultPasswordGenerator $passwordGenerator) {
     $this->config = $config_factory->get('ldap_user.settings');
     $this->logger = $logger;
     $this->detailLog = $detail_log;
@@ -157,6 +168,7 @@ class LdapEntryProvisionSubscriber implements EventSubscriberInterface, LdapUser
     $this->ldapUserManager = $ldap_user_manager;
     $this->fieldProvider = $field_provider;
     $this->fileSystem = $file_system;
+    $this->passwordGenerator = $passwordGenerator;
   }
 
   /**
@@ -392,7 +404,7 @@ class LdapEntryProvisionSubscriber implements EventSubscriberInterface, LdapUser
       case 'user-random':
         $pwd = CredentialsStorage::getPassword();
         if (version_compare(\Drupal::VERSION, '9.1', '>=')) {
-          $generated = \Drupal::service('password_generator')->generate();
+          $generated = $this->passwordGenerator->generate();
         }
         else {
           $generated = user_password();
@@ -402,7 +414,7 @@ class LdapEntryProvisionSubscriber implements EventSubscriberInterface, LdapUser
 
       case 'random':
         if (version_compare(\Drupal::VERSION, '9.1', '>=')) {
-          $value = \Drupal::service('password_generator')->generate();
+          $value = $this->passwordGenerator->generate();
         }
         else {
           $value = user_password();
@@ -638,7 +650,7 @@ class LdapEntryProvisionSubscriber implements EventSubscriberInterface, LdapUser
   private function checkExistingLdapEntry() {
     // @todo Inject.
     $authmap = \Drupal::service('externalauth.authmap')
-      ->get($this->account->id(), 'ldap_user');
+      ->get((int)$this->account->id(), 'ldap_user');
     if ($authmap) {
       return $this->ldapUserManager->queryAllBaseDnLdapForUsername($authmap);
     }
